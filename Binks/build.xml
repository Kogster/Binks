<?xml version="1.0" encoding="UTF-8"?>
<project name="binks" default="build" basedir=".">

	<property name="main-class" value="demo.Demo" />
	<!-- change to reflect your program -->
	<property name="jarName" value="theJar.jar" />
	<!-- change to reflect your program -->

	<property name="base.dir" location="" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="src" location="src" />
	<property name="comp" location="${build}/compiled" />
	<property name="loader" location="${build}/loader" />
	<property name="subJar" location="${build}/subJar" />
	<property name="lib" location="lib" />
	<property name="loader-main" value="binks.Loader" />

	<target name="build" depends="clean,init,compileActual,moveClasses,addLibraries,
		addResources,buildSubJar,buildMainJar,dist">
	</target>

	<target name="build-run" depends="build">
		<java dir="${dist}" jar="${dist}/${jarName}.jar" fork="true" failonerror="true" maxmemory="128m">
			<arg value="-h" />
			<classpath>
				<pathelement path="${main-class}" />
			</classpath>
		</java>
	</target>

	<target name="jar" description="--> make a jar file for this project">
		<delete file="${jar.file}" />
		<delete dir="target/temp" />
		<delete dir="target/classes" />
	</target>

	<target name="init" depends="clean">
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<mkdir dir="${loader}" />
		<mkdir dir="${build}/compiled" />
	</target>


	<target name="compileActual" description="compile the source">
		<unzip dest="${comp}" src="${lib}/jar-in-jar-loader.zip" />
		<javac destdir="${comp}" debug="true" includeantruntime="false">
			<src path="${src}" />
			<classpath>
				<fileset dir="${lib}/lib">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${lib}/platformlib/Windows-amd64">
					<!-- It is perfectly fine to build against an API version for a 
					different OS then your current one. Only the API is used at compile 
					time and that should really be the same -->
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="moveClasses" description="Move .class files in preparation for jarring">

		<move todir="${loader}/binks">
			<fileset dir="${build}/compiled/binks" />
		</move>
		<move todir="${loader}/org/eclipse">
			<fileset dir="${build}/compiled/org/eclipse" />
		</move>

		<move todir="${subJar}/">
			<fileset dir="${build}/compiled/" />
		</move>
	</target>


	<target name="addLibraries">
		<!-- Copy to loader jar libraries required to launch the subJar  -->
		<copy todir="${loader}/lib">
			<fileset dir="${lib}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<mkdir dir="${loader}/platformlib" />
		<copy todir="${loader}/platformlib">
			<fileset dir="${lib}/platformlib">

			</fileset>
		</copy>
		<copy todir="${loader}/lib">
			<fileset dir="${lib}/lib" />
		</copy>
	</target>

	<target name="addResources">
		<copy file="Resources/PlaceholderLaunchScreen.png" todir="${loader}" />
	</target>

	<target name="buildSubJar">
		<jar jarfile="${loader}/lib/loadee.jar" basedir="${subJar}">
			<manifest>
				<attribute name="Main-Class" value="{main-class}" />
				<attribute name="Class-Path" value="." />
			</manifest>
		</jar>
	</target>

	<target name="buildMainJar" description="generate the distribution">
		<!-- Create the distribution directory -->
		<jar jarfile="${build}/${jarName}" basedir="${loader}">
			<manifest>
				<attribute name="Main-Class" value="${loader-main}" />
				<attribute name="Class-Path" value="." />
				<attribute name="Launch-main" value="${main-class}" />
			</manifest>
		</jar>
	</target>

	<target name="dist">
		<move file="${build}/${jarName}" todir="${dist}" />
		<delete dir="${build}" />
	</target>


	<target name="clean" description="clean up">
		<!-- Delete the ${build} directory tree -->
		<delete dir="${build}" />
	</target>

</project>
